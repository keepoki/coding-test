"""
## 난이도
브론즈-2

## 알고리즘 분류
브루트포스 알고리즘

## 문제
카지노에서 제일 인기 있는 게임 블랙잭의 규칙은 상당히 쉽다. 카드의 합이 21을 넘지 않는
한도 내에서, 카드의 합을 최대한 크게 만드는 게임이다. 블랙잭은 카지노마다 다양한 규정이 있다.

한국 최고의 블랙잭 고수 김정인은 새로운 블랙잭 규칙을 만들어 상근, 창영이와 게임하려고 한다.

김정인 버전의 블랙잭에서 각 카드에는 양의 정수가 쓰여 있다. 그 다음, 딜러는 N장의 카드를
모두 숫자가 보이도록 바닥에 놓는다. 그런 후에 딜러는 숫자 M을 크게 외친다.

이제 플레이어는 제한된 시간 안에 N장의 카드 중에서 3장의 카드를 골라야 한다. 블랙잭 변형
게임이기 때문에, 플레이어가 고른 카드의 합은 M을 넘지 않으면서 M과 최대한 가깝게 만들어야 한다.

N장의 카드에 써져 있는 숫자가 주어졌을 때, M을 넘지 않으면서 M에 최대한 가까운 카드 3장의
합을 구해 출력하시오.

## 입력
첫째 줄에 카드의 개수 N(3 ≤ N ≤ 100)과 M(10 ≤ M ≤ 300,000)이 주어진다.
둘째 줄에는 카드에 쓰여 있는 수가 주어지며, 이 값은 100,000을 넘지 않는 양의 정수이다.

합이 M을 넘지 않는 카드 3장을 찾을 수 있는 경우만 입력으로 주어진다.

## 출력
첫째 줄에 M을 넘지 않으면서 M에 최대한 가까운 카드 3장의 합을 출력한다.

## 문제 요약
N장의 카드에 써져 있는 숫자가 주어졌을 때, M을 넘지 않으면서 M에 최대한 가까운 카드 3장의
합을 구해 출력하시오.

## 풀이 과정
모든 경우의 수를 구하기 위해 카드 3장이므로, 3중 반복문을 사용한다.
세 카드의 수를 더하고 M보다 작거나 큰 경우 비교한다.
M - 카드 3개의 합의 크기 기록하고 그 값과 비교하여 가장 차이 작은 값이
M에 가장 근접한 값이므로 해당 값을 반환한다.

## 풀이 요약
3중 반복문으로 3카드의 합에 대한 모든 경우의 수를 구하고, 크기가 가장 M에 근접한 값을 반환한다.

## 시간 복잡도: O(N³), 공간 복잡도: O(N)

## 제출 결과
32412 KB 88 ms

"""

N, M = map(int, input().split())
cards = list(map(int, input().split()))
result = 0

for i in range(N):
    for j in range(i + 1, N):
        for k in range(j + 1, N):
            card_sum = cards[i] + cards[j] + cards[k]

            if card_sum <= M and M - card_sum < M - result:
                result = card_sum

print(result)
