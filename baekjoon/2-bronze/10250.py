'''
## 난이도
브론즈-3

## 알고리즘 분류
수학, 구현, 사칙연산

## 문제
설문조사 결과 대로 호텔 정문으로부터 걷는 거리가 가장 짧도록 방을 배정하는 프로그램을
작성하고자 한다. 문제를 단순화하기 위해서 호텔은 직사각형 모양이라고 가정하자.
각 층에 W 개의 방이 있는 H 층 건물이라고 가정하자 (1 ≤ H, W ≤ 99).

그리고 엘리베이터는 가장 왼쪽에 있다고 가정하자. 이런 형태의 호텔을 H x W 형태 호텔이라고
부른다. 호텔 정문은 일층 엘리베이터 바로 앞에 있는데, 정문에서 엘리베이터까지의 거리는
무시한다. 또 모든 인접한 두 방 사이의 거리는 같은 거리(거리 1)라고 가정하고 호텔의 정면
쪽에만 방이 있다고 가정한다.

## 입력
프로그램은 표준 입력에서 입력 데이터를 받는다. 프로그램의 입력은 T 개의 테스트 데이터로
이루어져 있는데 T 는 입력의 맨 첫 줄에 주어진다. 각 테스트 데이터는 한 행으로서
H, W, N, 세 정수를 포함하고 있으며 각각 호텔의 층 수, 각 층의 방 수, 몇 번째 손님인지를
나타낸다(1 ≤ H, W ≤ 99, 1 ≤ N ≤ H x W).

## 출력
프로그램은 표준 출력에 출력한다. 각 테스트 데이터마다 정확히 한 행을 출력하는데,
내용은 N 번째 손님에게 배정되어야 하는 방 번호를 출력한다.
'''
t = int(input())

for i in range(0, t):
  h, w, n = map(int, input().split())
  floor = n % h
  number = n // h + 1 # '//'는 왼쪽 값을 오른 쪽으로 나눈 몫을 반환한다. (정수형)
  
  if (floor == 0):
    floor = h
    number -= 1
    
  print(floor * 100 + number)

'''
앞에 100의 자리는 층을, 나머지 뒤에 오는 숫자는 방 번호를 나타낸다.

층 개수가 30개라면, 1층~30층까지 존재한다.
층마다 방 개수가 50개라면, 1호~50호까지 존재한다.

엘리베이터과 가까운 방을 먼저 배치해야하는 상황에서는 손님의 순서가 101호부터
201호, 301호, 401호, ..., 3001호, 102호, 202호, ...로 이어지므로

30번째 손님은 3001호이며 거리는 1이다.
31번째 손님은 102호이며 거리는 2이다.

h=30, w=50, n=72
floor = n % h
floor = 72 % 30 => 12
number = n // h + 1
number = 72 // 30 + 1 => 2 + 1 => 3

floor = n % h에서 0으로 딱 맞아 떨어지는 경우
h=30, w=50, n=30
floor = n % h
floor = 30 % 30 => 0
number = n // h + 1
number = 30 // 30 + 1 => 1 + 1 => 2

002호는 없으므로 3001호가 맞다. 따라서 floor는 h, number은 1이 되어야 한다.
floor = h
number -= 1

'''


